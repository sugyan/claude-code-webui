name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: claude-code-webui-linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: claude-code-webui-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: claude-code-webui-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: claude-code-webui-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: claude-code-webui-windows-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: v2.x

      - name: Install and cache Deno dependencies
        run: deno install && deno cache cli/deno.ts
        working-directory: backend

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Copy frontend assets
        run: node scripts/copy-frontend.js
        working-directory: backend

      - name: Generate version.ts
        run: node scripts/generate-version.js
        working-directory: backend

      - name: Build backend binary
        run: deno compile --allow-net --allow-run --allow-read --allow-write --allow-env --allow-sys --include ./dist/static --target ${{ matrix.target }} --output ../dist/${{ matrix.artifact_name }} cli/deno.ts
        working-directory: backend

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Install Playwright browsers
        run: npx playwright install chromium
        working-directory: frontend

      - name: Start development server
        run: |
          cd frontend
          npm run dev &
          # Wait for server to be ready
          timeout 60 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done'
        continue-on-error: false

      - name: Record demo videos
        run: |
          cd frontend
          npm run record-demo codeGeneration -- --theme=both
        continue-on-error: true

      - name: Stop development server
        run: |
          # Kill any remaining dev server processes
          pkill -f "vite" || true
        continue-on-error: true

      - name: Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ./artifacts

      - name: Upload release assets
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          files: |
            artifacts/*/*
            frontend/demo-recordings/*.webm
          draft: true
          prerelease: false

      - name: Publish release
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          generate_release_notes: true
          draft: false
          prerelease: false

  npm-publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC authentication
      contents: read # Required for repository access
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Update npm to latest version
        run: npm install -g npm@latest

      - name: Install backend dependencies
        run: npm ci
        working-directory: backend

      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Build npm package
        run: npm run build
        working-directory: backend

      - name: Test npm package
        run: |
          npm run test
          # Test global installation
          npm pack
          PACKAGE_FILE=$(ls *.tgz)
          npm install -g "./$PACKAGE_FILE"
          # Test CLI functionality
          claude-code-webui --version
        working-directory: backend

      - name: Publish to npm (dry-run)
        run: npm publish --dry-run
        working-directory: backend

      - name: Publish to npm
        run: npm publish
        working-directory: backend
